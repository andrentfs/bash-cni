apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bashcni
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bashcni
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bashcni
subjects:
- kind: ServiceAccount
  name: bashcni
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bashcni
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: bashcni
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: bashcni
  template:
    metadata:
      labels:
        app: bashcni
    spec:
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccount: bashcni
      hostNetwork: true
      hostPID: true
      priorityClassName: system-node-critical
      initContainers:
      - name: install-cni-plugin
        image: cericwu/bashcni
        command:
        - cp
        args:
        - /app/host-local
        - /app/bash-cni
        - /opt/cni/bin/bash-cni
        volumeMounts:
        - name: cni-plugin
          mountPath: /opt/cni/bin
      containers:
      - name: bashcni
        image: cericwu/bashcni
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
      volumes:
      - name: cni-plugin
        hostPath:
          path: /opt/cni/bin
      - name: cni
        hostPath:
          path: /etc/cni/net.d
